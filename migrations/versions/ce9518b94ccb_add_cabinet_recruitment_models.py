"""Add cabinet recruitment models

Revision ID: ce9518b94ccb
Revises: 39ee24663207
Create Date: 2025-10-08 14:56:24.668704

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = 'ce9518b94ccb'
down_revision: Union[str, None] = '39ee24663207'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('application_fees',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cabinet_applications',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('registration_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('qualifications', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposal_document_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('technical_proposal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('financial_proposal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('references', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'APPROVED', 'REJECTED', 'CANCELLED', name='cabinetapplicationstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('payment_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('payment_currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_created', sa.Boolean(), nullable=False),
    sa.Column('credentials_sent', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_email')
    )
    op.create_table('cabinet_recruitment_campaigns',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('application_fee_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['application_fee_id'], ['application_fees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cabinet_recruitment_campaigns')
    op.drop_table('cabinet_applications')
    op.drop_table('application_fees')
    # ### end Alembic commands ###
