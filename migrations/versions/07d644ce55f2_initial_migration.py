"""Initial migration

Revision ID: 07d644ce55f2
Revises: 
Create Date: 2025-10-23 03:59:11.091783

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '07d644ce55f2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('application_fees',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cinetpay_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('transaction_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('amount_received', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('api_response_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('payment_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('payment_token', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('error_code', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cinetpay_payments_transaction_id'), 'cinetpay_payments', ['transaction_id'], unique=True)
    op.create_table('job_offers',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('reference', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('contract_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uncertain_term', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('weekly_hours', sa.Integer(), nullable=True),
    sa.Column('driving_license_required', sa.Boolean(), nullable=False),
    sa.Column('submission_deadline', sa.Date(), nullable=False),
    sa.Column('main_mission', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('responsibilities', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('competencies', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('profile', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('benefits', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('submission_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('attachment', sa.JSON(), nullable=True),
    sa.Column('conditions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_offers_reference'), 'job_offers', ['reference'], unique=False)
    op.create_table('organization_centers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
    sa.Column('telephone_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('mobile_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('organization_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_centers_name'), 'organization_centers', ['name'], unique=True)
    op.create_table('payments',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('transaction_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('product_amount', sa.Float(), nullable=False),
    sa.Column('product_currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('daily_rate', sa.Float(), nullable=False),
    sa.Column('usd_product_currency_rate', sa.Float(), nullable=False),
    sa.Column('usd_payment_currency_rate', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('payable_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payable_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_type_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_transaction_id'), 'payments', ['transaction_id'], unique=True)
    op.create_table('post_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_categories_slug'), 'post_categories', ['slug'], unique=False)
    op.create_table('reclamation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('refresh_token',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('civility', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=True),
    sa.Column('mobile_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fix_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('picture', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lang', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('web_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('moodle_user_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_fix_number'), 'users', ['fix_number'], unique=False)
    op.create_index(op.f('ix_users_mobile_number'), 'users', ['mobile_number'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('address_type', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=True),
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=120), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cabinet_recruitment_campaigns',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('application_fee_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['application_fee_id'], ['application_fees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('change_email_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('forgotten_password_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('job_offer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('application_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sa.Enum('RECEIVED', 'REFUSED', 'APPROVED', name='applicationstatusenum'), nullable=False),
    sa.Column('refusal_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('submission_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('civility', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['job_offer_id'], ['job_offers.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_applications_application_number'), 'job_applications', ['application_number'], unique=True)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('published_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['post_categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_slug'), 'posts', ['slug'], unique=False)
    op.create_index(op.f('ix_posts_title'), 'posts', ['title'], unique=False)
    op.create_table('profession_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('professional_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('professional_experience_in_months', sa.Integer(), nullable=False),
    sa.Column('socio_professional_category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('job_position', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('employer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reclamations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=False),
    sa.Column('priority', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resolution_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school_curriculum',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('qualification', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_degree_obtained', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('date_of_last_degree', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainings',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('duration_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('specialty_id', sa.Integer(), nullable=False),
    sa.Column('info_sheet', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('training_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('presentation', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('target_skills', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('program', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_audience', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('prerequisites', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('enrollment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['specialty_id'], ['specialty.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('two_factor_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('cabinet_applications',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('registration_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('qualifications', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('proposal_document_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('technical_proposal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('financial_proposal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('references', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'APPROVED', 'REJECTED', 'CANCELLED', name='cabinetapplicationstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('payment_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('payment_currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_created', sa.Boolean(), nullable=False),
    sa.Column('credentials_sent', sa.Boolean(), nullable=False),
    sa.Column('campaign_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['campaign_id'], ['cabinet_recruitment_campaigns.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_email')
    )
    op.create_table('job_application_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['job_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('application_id', sa.Integer(), nullable=True),
    sa.Column('document_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['job_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cover_image', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('section_style', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_sessions',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=False),
    sa.Column('registration_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('training_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['training_id'], ['trainings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('training_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('application_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('refusal_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('registration_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('training_fee', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('installment_percentage', sa.JSON(), nullable=True),
    sa.Column('payment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('civility', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('date_of_birth', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['target_session_id'], ['training_sessions.id'], ),
    sa.ForeignKeyConstraint(['training_id'], ['trainings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_applications_application_number'), 'student_applications', ['application_number'], unique=True)
    op.create_table('training_session_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('training_session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['training_session_id'], ['training_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('student_application_id', sa.Integer(), nullable=False),
    sa.Column('attachment_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['student_application_id'], ['student_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_fee_installment_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('delete_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('student_application_id', sa.Integer(), nullable=False),
    sa.Column('installment_number', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('payment_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['student_application_id'], ['student_applications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('training_fee_installment_payments')
    op.drop_table('student_attachments')
    op.drop_table('training_session_participants')
    op.drop_index(op.f('ix_student_applications_application_number'), table_name='student_applications')
    op.drop_table('student_applications')
    op.drop_table('training_sessions')
    op.drop_table('post_sections')
    op.drop_table('job_attachments')
    op.drop_table('job_application_codes')
    op.drop_table('cabinet_applications')
    op.drop_table('user_role')
    op.drop_table('user_permission')
    op.drop_table('two_factor_code')
    op.drop_table('trainings')
    op.drop_table('school_curriculum')
    op.drop_table('reclamations')
    op.drop_table('profession_status')
    op.drop_index(op.f('ix_posts_title'), table_name='posts')
    op.drop_index(op.f('ix_posts_slug'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_job_applications_application_number'), table_name='job_applications')
    op.drop_table('job_applications')
    op.drop_table('forgotten_password_code')
    op.drop_table('change_email_code')
    op.drop_table('cabinet_recruitment_campaigns')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_users_mobile_number'), table_name='users')
    op.drop_index(op.f('ix_users_fix_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('specialty')
    op.drop_table('role')
    op.drop_table('refresh_token')
    op.drop_table('reclamation_types')
    op.drop_index(op.f('ix_post_categories_slug'), table_name='post_categories')
    op.drop_table('post_categories')
    op.drop_index(op.f('ix_payments_transaction_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_organization_centers_name'), table_name='organization_centers')
    op.drop_table('organization_centers')
    op.drop_index(op.f('ix_job_offers_reference'), table_name='job_offers')
    op.drop_table('job_offers')
    op.drop_index(op.f('ix_cinetpay_payments_transaction_id'), table_name='cinetpay_payments')
    op.drop_table('cinetpay_payments')
    op.drop_table('application_fees')
    # ### end Alembic commands ###
